language: cpp
sudo: false
compiler:
  - clang
  - gcc
os:
  - linux
  - osx
before_install:
  # pip is annoying on osx and the coverage tool can't parse clang's output, so only run it on linux gcc
  - if [ $TRAVIS_OS_NAME == linux -a $CC == gcc ]; then GEN_COVERAGE=1; fi
  - if [ $GEN_COVERAGE ]; then pip install --user cpp-coveralls; CMAKE_EXTRA_OPTS="-DASAR_COVERAGE=ON"; fi
install: # misc setup that I didn't want to put in script
  - mkdir build tests_dll_tmp tests_app_tmp
  - cd build
script:
  - cmake -DCMAKE_BUILD_TYPE=Debug $CMAKE_EXTRA_OPTS ../src
  - make
  # run dll test suite
  # We need to pass the DLL path as an absolute path because it is used to calculate the std defines location, which will throw a warning when it's a relative path
  - asar-tests/asar-dll-test $TRAVIS_BUILD_DIR/build/asar/libasar.* $TRAVIS_BUILD_DIR/tests ../dummy_rom.sfc $TRAVIS_BUILD_DIR/tests_dll_tmp
  # run app test suite
  - asar-tests/asar-app-test asar/asar-standalone $TRAVIS_BUILD_DIR/tests ../dummy_rom.sfc $TRAVIS_BUILD_DIR/tests_app_tmp
after_success:
  - cd ..
  - if [ $GEN_COVERAGE ]; then lcov -c -d build -o coverage.info; coveralls --verbose --include src/asar --lcov-file coverage.info; fi
addons:
  apt:
    packages:
      - lcov

# MinGW cross-builds (make only)
matrix:
  include:
    - os: linux
      compiler: i686-w64-mingw32-gcc
      addons:
        apt:
          packages:
            - binutils-mingw-w64-i686
            - gcc-mingw-w64-i686
            - g++-mingw-w64-i686
      script:
        - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../cmake/mingw-x86.cmake $CMAKE_EXTRA_OPTS ../src
        - make
    - os: linux
      compiler: x86_64-w64-mingw32-gcc
      addons:
        apt:
          packages:
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
      script:
        - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../cmake/mingw-x64.cmake $CMAKE_EXTRA_OPTS ../src
        - make
